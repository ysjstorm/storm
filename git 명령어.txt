https://rogerdudler.github.io/git-guide/index.ko.html

///////////////////////////  branch  ////////////////////////////
아래 명령으로 "feature_x"라는 이름의 가지를 만들고 갈아탑니다.
git checkout -b feature_x

아래 명령으로 master 가지로 돌아올 수 있어요.
git checkout master

아래 명령으로는 가지를 삭제할 수 있어요.
git branch -d feature_x

여러분이 새로 만든 가지를 원격 저장소로 전송하기 전까지는
다른 사람들이 접근할 수 없어요.
git push origin <가지 이름>

/////////////////////  갱신과 병합(merge)  ///////////////////////
로컬 저장소를 원격 저장소에 맞춰 갱신
git pull
원격 저장소의 변경 내용이 로컬 작업 디렉토리에
받아지고(fetch), 병합(merge)된답니다.

다른 가지에 있는 변경 내용을 현재 가지(예를 들면, master 가지)에
병합하려면 아래 명령을 실행하세요.
git merge <가지 이름>

첫번째 명령이든 두번째 명령이든, git은
자동으로 변경 내용을 병합하려고 시도해요.
문제는, 항상 성공하는 게 아니라 가끔
충돌(conflicts)이 일어나기도 한다는 거예요.
이렇게 충돌이 발생하면, git이 알려주는 파일의 충돌 부분을
여러분이 직접 수정해서 병합이 가능하도록 해야 하죠.
충돌을 해결했다면, 아래 명령으로 git에게
아까의 파일을 병합하라고 알려주세요.
git add <파일 이름>

변경 내용을 병합하기 전에, 어떻게 바뀌었는지 비교해볼 수도 있어요.
git diff <원래 가지> <비교 대상 가지>

//////////////////////  로컬 변경 내용 되돌리기  ////////////////////
실수로 무언가 잘못한 경우,
아래 명령으로 로컬의 변경 내용을 되돌릴 수 있어요.
git checkout -- <파일 이름>
위 명령은 로컬의 변경 내용을 변경 전 상태(HEAD)로 되돌려줘요.
다만, 이미 인덱스에 추가된 변경 내용과
새로 생성한 파일은 그대로 남는답니다.

만약, 로컬에 있는 모든 변경 내용과 확정본을 포기하려면,
아래 명령으로 원격 저장소의 최신 이력을 가져오고,
로컬 master 가지가 저 이력을 가리키도록 할 수 있어요.
git fetch origin
git reset --hard origin/master



